[{"content":"day02 - Java基础语法 1. 注释 ​\t注释是对代码的解释和说明文字。\nJava中的注释分为三种：\n单行注释： 1 // 这是单行注释文字 多行注释： 1 2 3 4 5 6 /* 这是多行注释文字 这是多行注释文字 这是多行注释文字 */ 注意：多行注释不能嵌套使用。 文档注释（暂时用不到）： 1 2 3 4 5 /** 这是多行注释文字 这是多行注释文字 这是多行注释文字 */ 使用的技巧 ​\t如果我们要对代码进行解释，那么就可以使用注释。\n​\t当注释的内容比较少，一行就写完了，可以用单行注释。\n​\t如果注释的内容比较多，需要写在多行，那么可以使用多行注释。\n注意点 ​\t注释的内容不会参与编译和运行的，仅仅是对代码的解释说明而已。\n​\t所以，不管在注释当中写什么内容，都不会影响代码运行的结果。\n2. 关键字 2.1 概念 ​\t被Java赋予了特定含义的英文单词。\n​\t当我们在代码中写了关键字之后，程序在运行的时候，就知道要做什么事情了。\n注意：关键字很多，不用刻意去记。\nabstract assert boolean break byte case catch char class const continue default do double else enum extends final finally float for goto if implements import instanceof int interface long native new package private protected public return strictfp short static super switch synchronized this throw throws transient try void volatile while 2.2 第一个关键字class ​\t表示定义一个类。创建一个类。\n类：Java项目最基本的组成单元，一个完整的Java项目有可能会有成千上万个类来组成的。\nclass后面跟随的就是这个类的名字，简称：类名。\n在类名后面会有一对大括号，表示这个类的内容。\n举例：\n1 2 3 4 public class HelloWorld{ } 解释：class表示定义类。\n​\t类名：HelloWorld\n​\tHelloWorld后面的大括号表示这个类的范围。\n3. 字面量 作用：告诉程序员，数据在程序中的书写格式。\n字面量类型 说明 程序中的写法 整数 不带小数的数字 666，-88 小数 带小数的数字 13.14，-5.21 字符 必须使用单引号，有且仅能一个字符 ‘A’，‘0’， ‘我’ 字符串 必须使用双引号，内容可有可无 “HelloWorld”，“黑马程序员” 布尔值 布尔值，表示真假，只有两个值：true，false true 、false 空值 一个特殊的值，空值 值是：null 1 2 3 4 5 6 7 8 9 public class Demo { public static void main(String[] args) { System.out.println(10); // 输出一个整数 System.out.println(5.5); // 输出一个小数 System.out.println(\u0026#39;a\u0026#39;); // 输出一个字符 System.out.println(true); // 输出boolean值true System.out.println(\u0026#34;欢迎来到黑马程序员\u0026#34;); // 输出字符串 } } 区分技巧 不带小数点的数字都是整数类型的字面量。 只要带了小数点，那么就是小数类型的字面量。 只要用双引号引起来的，不管里面的内容是什么，不管里面有没有内容，都是字符串类型的字面量。 字符类型的字面量必须用单引号引起来，不管内容是什么，但是个数有且只能有一个。 字符类型的字面量只有两个值，true、false。 空类型的字面量只有一个值，null。 4. 变量 4.1 什么是变量？ ​\t变量就在程序中临时存储数据的容器。但是这个容器中只能存一个值。\n4.2 变量的定义格式 ​\t数据类型 变量名 = 数据值；\n4.2.1 格式详解 ​\t数据类型：限定了变量当中能存储什么类型的数据。\n​\t如果要存10，那么数据类型就需要写整数类型。\n​\t如果要存10.0，那么数据类型就需要写小数类型。\n​\t变量名：其实就是这个容器的名字。\n​\t当以后想要使用变量里面的数据时，直接使用变量名就可以了。\n​\t数据值：真正存储在容器中的数据。\n​\t分号：表示语句的结束，就跟以前写作文时候的句号是一样的。\n4.2.2 常用的数据类型 ​\t整数：int\n​\t小数：（浮点数）double\n​\t其他数据类型稍后讲解\n举例：\n1 2 3 4 5 6 7 8 9 10 11 12 public class VariableDemo{ public static void main(String[] args){ //定义一个整数类型的变量 //数据类型 变量名 = 数据值; int a = 16; System.out.println(a);//16 //定义一个小数类型的变量 double b = 10.1; System.out.println(b);//10.1 } } 4.2.3 变量的注意事项 变量名不能重复 在一条语句中，可以定义多个变量。但是这种方式影响代码的阅读，所以了解一下即可。 变量在使用之前必须要赋值。 案例：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 public class VariableDemo2{ public static void main(String[] args){ //1.变量名不允许重复 //int a = 10; //int a = 20; //System.out.println(a); //2.一条语句可以定义多个变量 //了解。 //int a = 10, b = 20, c = 20,d = 20; //System.out.println(a);//? //System.out.println(b);//? //3.变量在使用之前必须要赋值 int a = 30; System.out.println(a); } } 4.3 变量的练习 ​\t需求：说出公交车到终点站之后，车上一共有多少乘客？\n​\t一开始没有乘客。\n​\t第一站：上去一位乘客，没有下来乘客。\n​\t第二站：上去两位乘客，下来一位乘客。\n​\t第三站：上去两位乘客，下来一位乘客。\n​\t第四站：没有上去乘客，下来一位乘客。\n​\t第五站：上去一位乘客，没有下来乘客。\n​\t问：到了终点站之后，车上一共多少乘客？\n​\t代码解析：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 public class VariableTest1{ //主入口 public static void main(String[] args){ //一开始没有乘客。 int count = 0; //第一站：上去一位乘客 //在原有的基础上 + 1 count = count + 1; //System.out.println(count); //第二站：上去两位乘客，下来一位乘客 count = count + 2 - 1; //第三站：上去两位乘客，下来一位乘客 count = count + 2 - 1; //第四站：下来一位乘客 count = count - 1; //第五站：上去一位乘客 count = count + 1; //请问：到了终点站，车上一共几位乘客。 System.out.println(count);//3 } } 5. 数据类型 5.1 Java语言数据类型的分类 基本数据类型 引用数据类型（面向对象的时候再深入学习） 5.2 基本数据类型的四类八种 数据类型 关键字 内存占用 取值范围 整数 byte 1 负的2的7次方 ~ 2的7次方-1(-128~127) short 2 负的2的15次方 ~ 2的15次方-1(-32768~32767) int 4 负的2的31次方 ~ 2的31次方-1 long 8 负的2的63次方 ~ 2的63次方-1 浮点数 float 4 1.401298e-45 ~ 3.402823e+38 double 8 4.9000000e-324 ~ 1.797693e+308 字符 char 2 0-65535 布尔 boolean 1 true，false 说明 ​\te+38表示是乘以10的38次方，同样，e-45表示乘以10的负45次方。\n​\t在java中整数默认是int类型，浮点数默认是double类型。\n需要记忆以下几点 byte类型的取值范围：\n​\t-128 ~ 127\nint类型的大概取值范围：\n​\t-21亿多 ~ 21亿多\n整数类型和小数类型的取值范围大小关系：\n​\tdouble \u0026gt; float \u0026gt; long \u0026gt; int \u0026gt; short \u0026gt; byte\n最为常用的数据类型选择：\n在定义变量的时候，要根据实际的情况来选择不同类型的变量。\n比如：人的年龄，可以选择byte类型。\n比如：地球的年龄，可以选择long类型。\n如果整数类型中，不太确定范围，那么默认使用int类型。\n如果小数类型中，不太确定范围，那么默认使用double类型。\n如果要定义字符类型的变量，那么使用char\n如果要定义布尔类型的变量，那么使用boolean\n5.3 定义8种基本数据类型变量 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 public class VariableDemo3{ public static void main(String[] args){ //1.定义byte类型的变量 //数据类型 变量名 = 数据值; byte a = 10; System.out.println(a); //2.定义short类型的变量 short b = 20; System.out.println(b); //3.定义int类型的变量 int c = 30; System.out.println(c); //4.定义long类型的变量 long d = 123456789123456789L; System.out.println(d); //5.定义float类型的变量 float e = 10.1F; System.out.println(e); //6.定义double类型的变量 double f = 20.3; System.out.println(f); //7.定义char类型的变量 char g = \u0026#39;a\u0026#39;; System.out.println(g); //8.定义boolean类型的变量 boolean h = true; System.out.println(h); } } 注意点 如果要定义 一个整数类型的变量，不知道选择哪种数据类型了，默认使用int。 如果要定义 一个小数类型的变量，不知道选择哪种数据类型了，默认使用double。 如果要定义一个long类型的变量，那么在数据值的后面需要加上L后缀。（大小写都可以，建议大写。） 如果要定义一个float类型的变量，那么在数据值的后面需要加上F后缀。（大小写都可以） 5.4 练习1 需求：定义5个变量记录老师的信息并打印\n代码示例：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 public class VariableTest1{ public static void main(String[] args){ //1.定义字符串类型的变量记录老师的姓名 String name = \u0026#34;黑马谢广坤\u0026#34;; //2.定义整数类型的变量记录老师的年龄 int age = 18; //3.定义字符类型的变量记录老师的性别 char gender = \u0026#39;男\u0026#39;; //4.定义小数类型的变量记录老师的身高 double height = 180.1; //5.定义布尔类型的变量记录老师的婚姻状况 boolean flag = true; //输出5个变量的值 System.out.println(name); System.out.println(age); System.out.println(gender); System.out.println(height); System.out.println(flag); } } 5.5 练习2 需求：将（电影名称，主演，年份，评分）四个信息选择不同类型的变量，随后打印出来。\n代码示例：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 public class VariableTest2{ public static void main(String[] args){ //1.定义字符串变量记录电影的名称 String movie = \u0026#34;送初恋回家\u0026#34;; //2.定义三个变量记录主演的名字 String name1 = \u0026#34;刘鑫\u0026#34;; String name2 = \u0026#34;张雨提\u0026#34;; String name3 = \u0026#34;高媛\u0026#34;; //3. 定义整数类型的变量记录年龄的年份 int year = 2020; //4.定义小数类型的变量记录电影的评分 double score = 9.0; //打印变量的信息 System.out.println(movie); System.out.println(name1); System.out.println(name2); System.out.println(name3); System.out.println(year); System.out.println(score); } } 5.6 练习3 需求：选择其中一部手机，将（手机价格，手机品牌）两个信息选择不同类型的变量，随后打印出来。\n代码示例：\n1 2 3 4 5 6 7 8 9 10 11 12 13 public class VariableTest3{ public static void main(String[] args){ //1.定义小数类型的变量记录手机的价格 double price = 5299.0; //2.定义字符串类型的变量记录手机的品牌 String brand = \u0026#34;华为\u0026#34;; //输出变量记录的值 System.out.println(price); System.out.println(brand); } } 6. 标识符 业内大多数程序员都在遵守阿里巴巴的命名规则。\n在day02的资料文件夹中有。\n6.1 硬性要求： ​\t必须要这么做，否则代码会报错。\n必须由数字、字母、下划线_、美元符号$组成。 数字不能开头 不能是关键字 区分大小写的。 6.2 软件建议： ​\t如果不这么做，代码不会报错，但是会让代码显得比较low。\n6.2.1 小驼峰命名法 适用于变量名和方法名\n如果是一个单词，那么全部小写，比如：name\n如果是多个单词，那么从第二个单词开始，首字母大写，比如：firstName、maxAge\n6.2.2 大驼峰命名法 适用于类名\n如果是一个单词，那么首字母大写。比如：Demo、Test。\n如果是多个单词，那么每一个单词首字母都需要大写。比如：HelloWorld\n不管起什么名字，都要做到见名知意。\n阿里巴巴命名规范细节： 尽量不要用拼音。但是一些国际通用的拼音可视为英文单词。\n正确：alibaba、hangzhou、nanjing\n错误：jiage、dazhe\n平时在给变量名、方法名、类名起名字的时候，不要使用下划线或美元符号。\n错误：_name\n正确：name\n7. 键盘录入 ​\t键盘录入的实际功能Java已经帮我们写好了，不需要我们自己再实现了，而Java写好的功能都放在了Scanner这个类中，所以，我们只要直接使用Scanner这个类就可以了。\n使用步骤：\n第一步：\n​\t导包：其实就是表示先找到Scanner这个类在哪。\n第二步：\n​\t创建对象：其实就表示申明一下，我准备开始用Scanner这个类了。\n第三步：\n​\t接收数据：也是真正干活的代码。\n代码示例：\n1 2 3 4 5 6 7 8 9 10 11 12 13 //导包，其实就是先找到Scanner这个类在哪 import java.util.Scanner; public class ScannerDemo1{ public static void main(String[] args){ //2.创建对象，其实就是申明一下，我准备开始用Scanner这个类了。 Scanner sc = new Scanner(System.in); //3.接收数据 //当程序运行之后，我们在键盘输入的数据就会被变量i给接收了 System.out.println(\u0026#34;请输入一个数字\u0026#34;); int i = sc.nextInt(); System.out.println(i); } } 8. IDEA 8.1 IDEA概述 ​\tIDEA全称IntelliJ IDEA，是用于Java语言开发的集成环境，它是业界公认的目前用于Java程序开发最好的工具。\n集成环境：\n​\t把代码编写，编译，执行，调试等多种功能综合到一起的开发工具。\n8.2 IDEA的下载和安装 8.2.1 下载 ​\t可以到官方网站自行下载，网址为：https://www.jetbrains.com/idea\n​\t今天的资料中，对应的安装包也提高给大家了。\n8.2.2 安装 到资料文件夹中，双击安装包。 点击next，准备安装 点击Browse修改安装路径。\n修改完毕点击next\n勾选64-bit launcher。表示在桌面新建一个64位的快捷方式。\n其他的不要勾选。\n点击next。\n点击Install，准备安装。 等进度条读取完毕之后，会有最终界面提示。\n点击finish即可。\n第一次启动会询问，是否导入一些设置。\n选择第二个不导入，保持默认设置，再点击OK。\n选择背景主题\n左边是黑色背景。右边是白色背景。\n这个可以根据自己的喜好来选择。\n选择完毕点击右下角的next\n在本界面让我们购买idea。\n因为我们是学习阶段，所以可以使用免费使用30天。\n点击第一排第二个。Evaluate for free\n点击蓝色的Evaluate，就可以开始免费试用30天了。 当看到这个界面，就表示idea已经成功安装完毕\n可以点击右上角关闭。\n8.3 IDEA中层级结构介绍 8.3.1 结构分类 project（项目、工程） module（模块） package（包） class（类） 8.3.2 结构介绍 ​\t为了让大家更好的吸收，package这一层级，我们后面再学习，先学习最基础的project、module、class。\nproject（项目、工程） ​\t淘宝、京东、黑马程序员网站都属于一个个项目，IDEA中就是一个个的Project。\nmodule（模块） ​\t在一个项目中，可以存放多个模块，不同的模块可以存放项目中不同的业务功能代码。在黑马程序员的官方网站中，至少包含了以下模块：\n论坛模块 报名、咨询模块 为了更好的管理代码，我们会把代码分别放在两个模块中存放。\npackage（包） ​\t一个模块中又有很多的业务，以黑马程序员官方网站的论坛模块为例，至少包含了以下不同的业务。\n发帖 评论 为了把这些业务区分的更加清楚，就会用包来管理这些不同的业务。\nclass（类） ​\t就是真正写代码的地方。\n8.3.3 小结 层级关系\n​\tproject - module - package - class\n包含数量\n​\tproject中可以创建多个module ​\tmodule中可以创建多个package ​\tpackage中可以创建多个class\n​\t这些结构的划分，是为了方便管理类文件的。\n8.4 IDEA中的第一个代码 8.4.1 操作步骤 创建Project 项目 创建Module 模块 创建class 类 在类中编写代码 完成编译运行 8.4.2 分步图解 双击启动图标\n首先要新建一个项目\n点击creat new project\n我们要从0开始写代码，所以新建一个空的什么都没有的项目。\n点击左下方的Empty Project\n再点击右下角的next\n输入项目的名称\n输入项目的存放路径\n点击ok。idea会帮助我们在本地创建一个项目文件夹 点击Module，准备新建一个模块 点击+\n再点击New Module\n我们要编写Java代码，所以要新建一个Java模块。\n点击Java\n再点击右下角的next\n输入模块的名称\n再点击右下角的Next\n成功新建一个模块之后，中间就会出现刚刚新建的模块\n点击右下角的OK\n回到主界面\n展开刚刚新建的模块\n右键点击src，选择New，选择Java Class\n输入类名\n再按回车\n由于字体比较小\n所以，我们要设置一下字体。\n点击File，选择Setting。\n搜索一下font\n在右边可以输入Size的数值来调节代码字体的大小。\n设置完毕后点击右下角的OK\n编写代码 运行代码\n右键空白处，点击Run\n最下面会弹出控制台。\n所有输出语句中的内容，都会在控制台上展示。\n8.5 IDEA中类的相关操作 8.5.1 类的相关操作 新建类文件 删除类文件 修改类文件 8.5.2 新建类文件 所有的Java代码都会写在src文件夹当中。\n所以，右键点击src，选择new，点击Java Class\n输入类名，再按回车\n新建完毕\n8.5.3 修改类名 右键点击想要修改的文件\n点击Refactor\n再点击Rename\n输入想要修改的名字\n输入完毕点击下面的Refactor\n文件名和类名均已修改成功\n8.5.4 删除类文件 想要删除哪个文件，就右键点击该文件\n选择Delete即可\n在弹出的界面中点击OK，确定删除 小贴士：\n此时删除是不走回收站的，直接从硬盘中删掉了。\n8.6 IDEA中模块的相关操作 8.6.1 模块的相关操作 新建模块 删除模块 修改模块 导入模块 8.6.2 新建模块 点击File，选择Project Structure 选择Module 点击+\n选择New Module\n要创建一个Java模块，所以选择第一个Java\n点击右下角的Next\n输入模块的名称\n点击右下角的Finish\n成功新建完毕之后，在中间空白区域就出现了刚刚新建的模块\n点击右下角的OK\n在主界面中，也会出现刚刚新建的模块 8.6.3 删除模块 右键点击模块\n选择Remove Module\n选择Remove，表示确定删除 此时发现，在IDEA列表页面，删除的模块已经不在了。 小贴士：\n此时删除仅仅是从IDEA列表中的删除，在本地硬盘中还是存在的。\n8.6.4 修改模块 右键点击模块名\n选择Refactor\n再选择Rename\n选择第三个修改模块名和本地文件夹名\n点击OK\n输入要修改的新的模块名\n输入完毕点击Refactor\n回到主界面，就发现模块名和文件夹名都已经修改完毕 8.6.5 导入模块 点击File，选择Project Structure 选择Module\n点击+\n选择Import Module\n从本地硬盘中选择要导入的模块\n再点击OK\n不断点击Next 如果中间出现提示框，则点击Overwrite\n然后继续点击右下角的Next\n一直点到finish为止 成功导入后，在中间位置就会出现导入的模块信息 在主界面中也会出现导入的模块信息 展开模块点击模块中的Java文件，会发现代码报错。\n是因为导入模块跟JDK没有关联导致。\n可以点击右上角的Setup SDK\n再选择已经安装的JDK版本即可\n导入完毕之后，代码就恢复正常不会报错了 8.7 IDEA中项目的相关操作 8.7.1 项目的相关操作 关闭项目 打开项目 修改项目 新建项目 8.7.2 关闭项目 点击File，选择Close Project即可 刚刚操作的项目就已经关闭了\n左侧是项目列表，如果要再次打开该项目，直接点击即可。\n右侧有create new project，可以再建一个新的项目\n鼠标放在项目上，后面会出现一个叉。\n如果点击了这里的叉，会在IDEA的列表中删除。不会删除本地硬盘上的项目。\n8.7.3 打开项目 在本界面还可以打开本地已经存在的项目\n点击Open or Import\n选择要打开的项目\n点击OK\n项目就被打开了。 8.7.4 修改项目 点击File，选择Project Structure 在这个界面，默认是Module\n所以，要先点击Project\n在右侧页面中，输入新的项目名称\n修改JDK版本和编译版本都变成JDK14\n再点击OK\n此时发现，项目名称已经修改完毕 但是本地文件夹的名字还没有修改 需要先关闭当前项目 点击项目后面的叉，从列表中移除项目 到本地硬盘中手动修改文件夹的名称 点击Open or Import重新打开项目 选择修改之后的项目\n点击OK\n此时会发现，项目名称和本地硬盘文件夹的名称都已经修改完毕了 8.7.5 新建项目 点击File\n选择New\n点击Project\n同样还是创建一个什么都没有的空项目 输入项目的名称\n点击右下角的finish\nIDEA循环是否需要帮我们在本地创建一个新的文件夹\n点击OK\n询问是在本窗口打开还是在一个新的窗口打开。\n可以点击New Window，在一个新的窗口打开。\n此时就出现了两个窗口，在一个新的窗口打开了新的项目 ","date":"2024-10-07T14:37:10+08:00","image":"https://AXiao-HOLO.github.io/p/day02-java%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/Image_1724940523674_hu8184546109368228297.jpg","permalink":"https://AXiao-HOLO.github.io/p/day02-java%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/","title":"day02-Java基础概念"},{"content":" 1. 人机交互 1.1 什么是cmd？ 就是在windows操作系统中，利用命令行的方式去操作计算机。\n我们可以利用cmd命令去操作计算机，比如：打开文件，打开文件夹，创建文件夹等。\n1.2 如何打开CMD窗口？ 按下快捷键：win + R。\n此时会出现运行窗口。\n在运行窗口中输出cmd\n输出回车。\n解惑：\n​\tcmd默认操作C盘下的users文件夹下的XXX文件夹。（XXX就是计算机名）\n1.3 常用CMD命令 扩展一个小点：\n​\t在很多资料中都说成是DOS命令，其实是不对的。真正的DOS命令是1981年微软和IBM出品的MS-DOS操作系统中的命令才叫做DOS命令。\n​\t而在Windows中，win98之前的操作系统是以非图形化的DOS为基础的，可以叫做DOS命令。到了2000年以后，windows逐渐的以图形化界面为主了，这个时候就不能叫DOS命令了，他只是模拟了DOS环境而已，很多的原本的DOS命令已经无法使用了，所以这个时候叫做CMD命令会更准确一些。\n常见的CMD命令如下：\n操作 说明 盘符名称: 盘符切换。E:回车，表示切换到E盘。 dir 查看当前路径下的内容。 cd 目录 进入单级目录。cd itheima cd .. 回退到上一级目录。 cd 目录1\\目录2... 进入多级目录。cd itheima\\JavaSE cd \\ 回退到盘符目录。 cls 清屏。 exit 退出命令提示符窗口。 1.4 CMD练习 需求：\n利用cmd命令打开自己电脑上的QQ。\n完成步骤：\n1 2 3 4 1,确定自己电脑上的QQ安装在哪里 2,启动cmd 3,进入到启动程序QQ.exe所在的路径。 4,输出qq.exe加回车表示启动qq。 解惑：\n​\t在windows操作系统当中，文件名或者文件夹名是忽略大小写的。\n1.5 环境变量 作用：\n​\t如果我想要在CMD的任意目录下，都可以启动某一个软件，那么就可以把这个软件的路径配置到环境变量中的PATH里面。\n​\t在启动软件的时候，操作系统会先在当前路径下找，如果在当前录课没有再到环境变量的路径中去找。如果都找不到就提示无法启动。\n步骤：\n右键我的电脑，选择属性。 点击左侧的高级系统设置 选择高级，再点击下面的环境变量。 找系统变量里面的PATH 把软件的完整路径，配置到PATH当中就可以了。 （可做可不做）就是把自己配置的路径，移动到最上面。 图解示例如下：\n第一步：右键点击我的电脑并选择属性。\n（如果无法出现第二步界面，可以打开我的电脑之后右键点击空白处）\n第二步：点击高级系统设置。\n​\t第三步：选择高级，再点击下面的环境变量。\n第四步：找系统变量里面的PATH\n第五步：点击新建，把软件的完整路径，配置到PATH当中，再点击确定即可。\n第六步：（可做可不做）点击上移，把当前配置的路径移动到最上面。\n移动的好处：在CMD中打开软件时，会先找当前路径，再找环境变量，在环境变量中是从上往下依次查找的，如果路径放在最上面查找的速度比较快。\n2. Java概述 1.1 Java是什么？ 语言：人与人交流沟通的表达方式\n计算机语言：人与计算机之间进行信息交流沟通的一种特殊语言\nJava是一门非常火的计算机语言。（也叫做编程语言）\n我们想要让计算机做一些事情，那么就可以通过Java语言告诉计算机就可以了\n1.2下载和安装 1.2.1 下载 通过官方网站获取JDK\nhttp://www.oracle.com\n注意1：针对不同的操作系统，需要下载对应版本的JDK。\n注意2：\n​\t如果你的电脑是windows32位的，建议重装系统，重装成64位的操作系统。\n​\t因为Java从9版本开始，就已经不提供32位版本的安装包了。\n​\t如果自己不愿意下载，到今天day01资料文件中，也有对应的安装包。\n1.2.2 安装 ​\t傻瓜式安装，下一步即可。默认的安装路径是在C:\\Program Files下。\n建议：\n安装路径不要有中文，不要有空格等一些特殊的符号。 以后跟开发相关的所有软件建议都安装在同一个文件夹中，方便管理。 1.2.3 JDK的安装目录介绍 目录名称 说明 bin 该路径下存放了JDK的各种工具命令。javac和java就放在这个目录。 conf 该路径下存放了JDK的相关配置文件。 include 该路径下存放了一些平台特定的头文件。 jmods 该路径下存放了JDK的各种模块。 legal 该路径下存放了JDK各模块的授权文档。 lib 该路径下存放了JDK工具的一些补充JAR包。 1.3 HelloWorld小案例 ​\tHelloWorld案例是指在计算机屏幕上输出“HelloWorld”这行文字。各种计算机语言都习惯使用该案例作为第一个演示案例。\n2.3.1 Java程序开发运行流程 开发Java程序，需要三个步骤：编写程序，编译程序，运行程序。\n2.3.2 HelloWorld案例的编写 新建文本文档文件，修改名称为HelloWorld.java。 注意：后缀名为java的才是java文件。\n用记事本打开HelloWorld.java文件，输写程序内容。 注意：代码要跟我编写的完全保持一致。\n1 2 3 4 5 public class HelloWorld { public static void main(String[] args) { System.out.println(\u0026#34;HelloWorld\u0026#34;); } } 保存 注意：未保存的文件在左上角会有*符号标记\n编译文件。编译后会产生一个class文件。\njava文件：程序员自己编写的代码。\nclass文件：交给计算机执行的文件。\n运行代码\n注意：运行的是编译之后的class文件。\n用到两个命令：\n​\tjavac + 文件名 + 后缀名 （就是编译java文件）\n​\tjava + 文件名（运行编译之后的class文件）\n1.4 HelloWorld案例常见问题 1.4.1 BUG ​\t在电脑系统或程序中，隐藏着的一些未被发现的缺陷或问题统称为bug（漏洞）。\n1.4.2 BUG的解决 具备识别BUG的能力：多看 具备分析BUG的能力：多思考，多查资料 具备解决BUG的能力：多尝试，多总结 1.4.3 HelloWorld常见问题 1、非法字符问题。Java中的符号都是英文格式的。\n2、大小写问题。Java语言对大小写敏感（区分大小写）。\n3、在系统中显示文件的扩展名，避免出现HelloWorld.java.txt文件。\n4、编译命令后的java文件名需要带文件后缀.java\n5、运行命令后的class文件名（类名）不带文件后缀.class\n\u0026hellip;\n常见错误代码1： 1 2 3 4 5 publicclass HelloWorld{ public static void main(String[] args){ System.out.println(\u0026#34;HelloWorld\u0026#34;); } } 问题：\n​\tpublic和class之间缺少一个空格。\n技巧：一般来讲在单词之间的空格是不能省略的。\n​\t如果是单词和符号之间的空格是可以省略的。\n常见错误代码2： 1 2 3 4 5 public class HelloWorld{ public static void main(String[] args){ system.out.println(\u0026#34;HelloWorld\u0026#34;); } } 问题：\n​\tsystem首字母必须大写。\n技巧：\n​\tJava代码中，是严格区分大小写的。\n​\t所以该大写的地方一定要大写，该小写的地方一定要小写。多多练习。\n常见错误代码3： 1 2 3 4 5 public class HelloWorld{ public static void main(String[] args){ System.out.println(HelloWorld); } } 问题：\n​\t第三行代码中的HelloWorld必须用双引号引起来，否则就会出现问题。\n常见错误代码4： 1 2 3 4 5 public class HelloWorld{ public static void main(String[] args){ System.out.println(\u0026#34;HelloWorld\u0026#34;)； } } 问题：\n​\t在以后代码当中，所有的标点符号必须是英文状态下的。\n技巧：\n​\t可以在输入法中进行对应的设置。\n1.5 环境变量 1.5.1 为什么配置环境变量 ​\t开发Java程序，需要使用JDK提供的开发工具（比如javac.exe、java.exe等命令），而这些工具在JDK的安装目录的bin目录下，如果不配置环境变量，那么这些命令只可以在bin目录下使用，而我们想要在任意目录下都能使用，所以就要配置环境变量。\n注意：现在最新从官网上下载的JDK安装时会自动配置javac、java命令的路径到Path环境变量中去 ，所以javac、java可以直接使用。\n1.5.2配置方式 以前下载的老版本的JDK是没有自动配置的，而且自动配置的也只包含了4个工具而已，所以我们需要删掉已经配置完毕的，再次重新配置Path环境变量。\n①JAVA_HOME：告诉操作系统JDK安装在了哪个位置（未来其他技术要通过这个找JDK）\n②Path：告诉操作系统JDK提供的javac(编译)、java(执行)命令安装到了哪个位置\n1.5.3win10的bug 当电脑重启之后，环境变量失效了。表示操作系统不支持自定义的环境变量。\n步骤：\n还是要配置JAVA_HOME给以后的相关软件去使用\n我们可以把java和javac的完整路径配置到PATH当中。\nE:\\develop\\JDK\\bin\n1.6 Notepad++ 1.6.1下载 ​\t打开百度，搜索一下notepad++就可以了。\n​\tday01的资料文件夹里面也有对应的安装包。\n1.6.2 安装 傻瓜式安装，直接点击下一步就可以了。\n​\t对安装路径有两个小建议：\n路径不要有中文，不要有空格，不要有一些特殊符号 建议最好把所有的跟开发相关的软件都放在一起，方便管理。 1.6.3 设置 ​\t右键点击java文件，选择edit with notepad++。\n​\t点击设置，再点击首选项。在弹出的页面当中，左侧选择新建，中间选择Java，右侧选择ANSI。\n1.6.4 练习 ​\t利用notepad++去编写一个HelloWorld并能成功编译和运行。\n1.7 Java语言的发展 三个版本：\nJava5.0：这是Java的第一个大版本更新。 Java8.0：这个是目前绝大数公司正在使用的版本。因为这个版本最为稳定。 Java15.0：这个是我们课程中学习的版本。 解惑：\n​\t我们学的跟工作中使用的版本不太一样啊。会不会影响以后工作呢？\n向下兼容。新的版本只是在原有的基础上添加了一些新的功能而已。\n举例：\n用8版本开发的代码，用11版本能运行吗？必须可以的。\n用11版本开发的代码，用8版本能运行吗？不一定。\n如果11版本开发的代码，没有用到9~11的新特性，那么用8是可以运行的。\n如果11版本开发的代码，用到了9~11的新特性，那么用8就无法运行了。\n1.8 Java的三大平台 ​\tJavaSE、JavaME、JavaEE\n1.8.1 JavaSE ​\t是其他两个版本的基础。\n1.8.2 JavaME ​\tJava语言的小型版，用于嵌入式消费类电子设备或者小型移动设备的开发。\n​\t其中最为主要的还是小型移动设备的开发（手机）。渐渐的没落了，已经被安卓和IOS给替代了。\n​\t但是，安卓也是可以用Java来开发的。\n1.8.3 JavaEE ​\t用于Web方向的网站开发。（主要从事后台服务器的开发）\n​\t在服务器领域，Java是当之无愧的龙头老大。\n1.9 Java的主要特性 面向对象 安全性 多线程 简单易用 开源 跨平台 1.9.1 Java语言跨平台的原理 操作系统本身其实是不认识Java语言的。 但是针对于不同的操作系统，Java提供了不同的虚拟机。 虚拟机会把Java语言翻译成操作系统能看得懂的语言。\n1.10 JRE和JDK JVM（Java Virtual Machine），Java虚拟机\nJRE（Java Runtime Environment），Java运行环境，包含了JVM和Java的核心类库（Java API）\nJDK（Java Development Kit）称为Java开发工具，包含了JRE和开发工具\n总结：我们只需安装JDK即可，它包含了java的运行环境和虚拟机。\n","date":"2024-10-06T12:54:10+08:00","image":"https://AXiao-HOLO.github.io/p/day01-java%E5%85%A5%E9%97%A8/Image_1724940523674_hu8184546109368228297.jpg","permalink":"https://AXiao-HOLO.github.io/p/day01-java%E5%85%A5%E9%97%A8/","title":"day01-Java入门"},{"content":"这个页面记录我的markdown语法学习的记录，来源于这里。学习流程为在这篇文章中写出和目标文章相同的效果。\n一、Markdown基本语法 1.标题语法 1.1写法1： 1 2 3 4 5 6 # 一级标题\t或者用HTML语法：\u0026lt;h1\u0026gt;Heading level 1\u0026lt;/h1\u0026gt; ## 二级标题\t或者用HTML语法：\u0026lt;h2\u0026gt;Heading level 2\u0026lt;/h2\u0026gt; ### 三级标题\t··· #### 四级标题\t··· ##### 五级标题\t··· ###### 六级标题\t··· 需要注意的是，在#的后面要加上一个空格。\n实例效果：\n1.2写法2： 1 在标题的下面卸任一数量的==或者--来表示一级标题或者耳机标题 预览效果：\n2.字体语法： 2.1设计粗体、斜体、和删除线的方法 1 2 3 4 5 *这里是文字*\t//斜体 _这里是文字_\t//斜体 **这里是文字**\t//粗体 ***这里是文字***\t//斜体+粗体 ~~这里是文字~~\t//删除线 这里是文字\t//斜体 这里是文字\t//斜体 这里是文字\t//粗体 这里是文字\t//斜体+粗体 这里是文字\t//删除线\n示例效果：\n2.2设计字体、字号和颜色 这里，就需要用到HTML语法了。\n因为它本身是不支持修改字体、字号与颜色等功能的。\n有些网站，比如像Github、知乎、简书等，它们就无法设置这种功能。不过像有的万盏，比如像CSDN，它的Markdown编辑器做了很好的扩展、支持HTML语法，就有这样的功能\n具体如下：\n1 \u0026lt;font face=\u0026#39;黑体\u0026#39; color=#ff0000 size=10\u0026gt;我是正文\u0026lt;/font\u0026gt; 我是正文\n在Typora编辑器中可以实现\n这里的【黑体】，也可以改成【宋体】、【楷体】、【微软雅黑】等等。\n这里的size，是规定文本尺寸的大小。一般是1-7，浏览器默认为3。\n至于这里的color，建议可以用十六进制来表示，也可以用rgb来表示。如下表：\n我仅截取了部分。如果没有你想要的颜色，可以查看RGB颜色值与十六进制颜色码对照表\n2.3背景色 在markdown语法里，本身也是没有背景色这样一个选项的。\n所以，就需要用内置HTML的形式。\n借助 table, tr, td 等表格标签的 bgcolor 属性来实现背景色的功能。举例如下：\n1 \u0026lt;table\u0026gt;\u0026lt;tr\u0026gt;\u0026lt;td bgcolor=orange\u0026gt;背景色是：orange\u0026lt;/td\u0026gt;\u0026lt;/tr\u0026gt;\u0026lt;/table\u0026gt; 渲染效果：\n背景色是：orange 3.链接语法 3.1Markdown语法形式 1 [文本替换链接](链接) 比如，我想要访问baidu.com，那么，我就可以：\n1 [百度一下，我就知道](baidu.com) 百度一下，我就知道\n给链接添加一个Title：\n什么叫给链接添加一个标题？ 就是把你的鼠标放到该链接上时，会显示出来的文字。\n直接在圆括号后面添加即可，就像这样：\n1 [百度一下，你就知道](baidu.com \u0026#34;搜索网站\u0026#34;) 百度一下，你就知道\n3.2HTML形式语法 1 \u0026lt;a href=\u0026#34;超链接地址\u0026#34; title=\u0026#34;超链接title\u0026#34;\u0026gt;超链接显示名\u0026lt;/a\u0026gt; 百度一下，你就知道\n出来的效果和上面的是一样的。\n3.3图片链接 ——markdown语法：\n1 ！[图片解释性内容](图片链接) 比如：\n不过，在一般情况下，你直接把你的图片复制进去就可以了。链接会帮你自动生成的。\n但是，如果你的图片仅仅是保存在本地，没有存放到图床等地方，那么当你的文件传输给别人的时候，就会丢失。这个时候，需要把图片存放到云端。具体的方法就是要搭建图床。关于搭建Github图床的方法，可以参见这篇文章：(如何用github搭建图床（亲测有效）_jxwd的博客-CSDN博客\n——HTML形式的语法\n关于图片，也可以用HTML语法来进行实现。\n具体来说，就是：\n1 \u0026lt;img src=\u0026#34;图片链接\u0026#34; alt=\u0026#34;图片alt\u0026#34; title=\u0026#34;图片title\u0026#34;\u0026gt; 渲染的效果是一样的。\n——把图片也变成超链接：\n那么，在图片中，也是可以添加链接的。\n具体操作的方法语法格式为：\n1 [![我的博客主页]([相关图片链接])](跳转链接) 比如，你点击我下面的图片试试，你看你会不会跳到我的博客主页中去【可能需要按住ctrl键，也就是说，我的图片此时就相当于一个超链接】：\n当然，关于图片的操作还有很多，但其他的大多都不太常用了，我们这里就不再介绍。\n3.4自动生成超链接 有一种比较简单的方法，就是直接在链接的两侧加上一个尖括号，这样markdown会自动将其识别为一个链接。\n具体来说，就是：\n1 \u0026lt;\u0026#34;[相关链接]\u0026#34;\u0026gt; 比如，如下图所示，这就是我前面的图片的链接：\n\u0026lt;\u0026quot;[https://c-ssl.dtstatic.com/uploads/item/201503/08/20150308161918_BkZrQ.thumb.1000_0.png]\u0026quot;\u0026gt;\n这个样子的话，对于网址和Email，也可以比较方便地转换为可点击的链接了。读者可自行尝试，直接用尖括号加上邮箱即可。\n如果想要对链接进行渲染，直接在链接上进行其他的渲染操作即可(比如加粗、变换字体、字号等)\n3.5锚点 这是一个很6的语法。\n锚点实际上就是页内连接。\n具体语法是：\n1 2 3 ## 这是我的标题{#index} //在某个标题后面设置锚点 跳转到[目录](#index)\t//回到锚点 可以来举个例子：\n点击目录，可以跳转到 【1.3链接语法】的位置\n注意有些编辑器可能不支持。还有在简书里，它可能会重新跳出来一个页面然后去跳转。所以，这个功能还需要看具体的编辑器是否支持。\n具体写出来，是这个样子\n:\n3.6注脚 语法示例：\n1 2 3 xxxx[^1]xxxx [^1]:xxxx 渲染效果：（注：脚注可能自动被搬运到最后面，请到文章末尾查看）\nxxxx1xxxx\n3.7内容目录 在段落中填写 [TOC] 以显示全文内容的目录结构。\n不过还是需要注意，不是所有的编辑器都支持。比如我记得知乎就不支持（不知道现在支不支持了）。\n4.分割线语法 这个比较简单，如果要创建分隔线，在单独一行上使用三个或多个星号 (***)、破折号 (---) 或下划线 (___) ，并且不能包含其他内容。\n效果展示：\n5.代码语法 对于程序员来说，代码是必不可少的。\n插入程序代码的方式主要是利用英文“`”符号（一般在ESC键下方，和~同一个键）包裹代码。\n5.1包裹转义代码 如果你要表示为代码的单词或短语中包含一个或多个反引号，则可以通过将单词或短语包裹在双反引号(````)中.\n1 2 ``printf(\u0026#34;hello world\u0026#34;);``\t//这是markdown语法 \u0026lt;code\u0026gt;printf(\u0026#34;hello world\u0026#34;);\u0026lt;/code\u0026gt; //这是HTML语法 渲染效果是一样的，如下：\nprintf(\u0026quot;hello world\u0026quot;);\nprintf(\u0026ldquo;hello world\u0026rdquo;);\n5.2代码块 我们刚刚是在所要包裹的代码两侧各加上两个`` `\n那么现在，我直接用三个```来作为开始就好了。\n它的示例效果就是像这样：\n5.3HTML代码块 当然了，也可以用HTML代码块来去写。\n1 2 3 4 5 \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;/html\u0026gt; \u0026lt;/head\u0026gt; 当然，需要注意的是有些编辑器是不支持HTML语法的。比如简书等。我们在前面提到过。\n6.引用 6.1基本使用方法 在所要加引用的段落前面加上一个\u0026gt;\n比如：\n1 \u0026gt;这是一个引用 渲染效果：\n这是一个引用\n6.2引用嵌套 就是在引用里面再加一层引用。\n语法也很简单：\n1 2 3 \u0026gt;这是一个引用 \u0026gt; \u0026gt;\u0026gt;这是一个嵌套引用 渲染效果：\n这是一个引用\n这是一个嵌套引用\n6.3带有其他元素的块引用 比如，在引用里包含表题 、不同形式的字体等等。类似于不同语法的嵌套使用。\n例如：\n1 2 \u0026gt;**这是一个加粗的引用** \u0026gt;这是一个普通的引用 这是一个加粗的引用 这是一个普通的引用\n7.列表 7.1无序列表 使用*，+，-表示无序列表。\n注意：符号后面一定要有一个空格，起到缩进的作用。\n1 2 3 4 5 6 - 我是无序列表1 - 我是无序列表2 + 我是无序列表3 + 我是无序列表4 * 我是无序列表5 * 我是无序列表6 渲染效果：\n我是无序列表1 我是无序列表2 我是无序列表3 我是无序列表4 我是无序列表5 我是无序列表6 7.2有序列表 使用数字和一个英文句点表示有序列表。\n注意：英文句点后面一定要有一个空格，起到缩进的作用。\n1 2 3 1. 我是有序列表 2. 我是有序列表 3. 我是有序列表 渲染效果：\n我是有序列表 我是有序列表 我是有序列表 另外，列表不光可以单独使用，也可以使用其他的 Markdown 语法，包括标题、引用、代码区块等。\n【注】在使用列表时，只要是数字后面加上英文的点，就会无意间产生列表，比如2017.12.30 这时候想表达的是日期，有些软件把它被误认为是列表。解决方式：在每个点前面加上\\就可以了。\n8.表格 语法格式：\n1 2 3 4 姓名|学号|分数 -|-|- 孙悟空|2021|95 猪八戒|20211|96 渲染效果：\n姓名 学号 分数 孙悟空 2021 95 猪八戒 20211 96 二、其他常用 9.换行 方法1：连续两个以上空格+回车。\n方法2：使用html语言换行标签。\n10.特殊符号 (1)对于Markdown中的语法符号，前面加反斜线\\即可显示符号本身。这和高级程序设计语言中的转义用法类似。\n1 2 3 4 \\\\\t表示一个反斜线\\ \\*\t表示一个* \\{\\}\t表示一个{} ··· 大家需要注意这里表示的是什么意思。\n就是说，本来，\\、*等字符可能伴有转义的其他含义。可能是在markdown语法中的一种语法形式。但是，前面加上了\\之后，\\、*这些符号就仅仅是简简单单的斜线和*了。不再具有其他markdown语法的作用。就是纯文本语境下的\\和*。\n(2)其他特殊字符，示例如下(注意在数字的后面的分号不能忘记)：\n1 2 3 4 5 \u0026amp;#10003; 它是一个√ \u0026amp;#10052; 它是一个❄ ... 渲染效果：\n✓\n❄\n这里是通过Unicode码来进行转义的。想知道字符对应的Unicode码，可以看这个网站：\u0026lt;\u0026ldquo;https://unicode-table.com/cn\"\u003e\n不过还是需要注意，不是所有的在线编辑器都支持这样的转换方式。但大多数都支持。\n三、高级用法 11.Latex数学公式 11.1行内公式： 使用两个“$”符号引用公式：\n1 2 3 4 $公式$ $n*2$ //在Typora编辑器中，单独一个$包裹住无法使用数学公式(不知道是不是bug)，只有使用两个$才有效 渲染效果：\n$n*2$\n**我们可以在$$里写上相应的数学公式。**具体见3.1.2\n11.2具体数学公式 11.2.1指数与下标 1 语法形式：$a^3_{2}$ 渲染效果：\n$a^3_{2}$\n这个^后面，就是跟着一个指数，然后_的后面跟着的就是下标\n11.2.2平方根 1 语法形式：$\\sqrt{x}$ 渲染效果：\n$\\sqrt{x}$\n11.2.3在上方或者下方的下划线(可以表示取反等) 1 2 语法形式：$\\overline{m+n}$ 和 $\\underline{m+n}$ 渲染效果：\n$\\overline{m+n}$\n$\\underline{m+n}$\n11.2.4向量 1 2 3 $\\vec a$\t表示向量a $\\overrightarrow{AB}$ 表示向量AB，箭头指向右(即A-\u0026gt;B)\t$\\overleftarrow{AB}$ 表示向量BA，箭头指向左(即A\u0026lt;-B) 渲染效果：\n$\\vec a$\n$\\overrightarrow{AB}$\n$\\overleftarrow{AB}$\n11.2.5分数 1 语法形式：$\\frac{x^{2}}{k+1}$ 渲染效果：\n$\\frac{x^{2}}{k+1}$\n一般按照：\n1 $\\frac{...}{...}$ 来排版，前面表示分子，后面表示分母 11.2.6积分、求和、求积运算符 1 2 3 求和：$\\sum_{i=1}^{n}$\t//按照$$\\sum_{...}^{...}$$的格式 积分：$\\int_{0}^{\\pi}$\t//按照$$\\int_{...}^{...}$$的格式 求积：$\\prod_{0}^{n}$\t//同上两种类似，按照$$\\prod_{...}^{...}$$的格式 渲染效果：\n$\\sum_{i=1}^{n}$\n$\\int_{0}^{\\pi}$\n$\\prod_{0}^{n}$\n11.2.7其他一些希腊字母的表示 No. Lowercase Uppercase English IPA $1$ $\\alpha$ $A$ $alpha$ /\u0026lsquo;ælfə/ $2$ $\\beta$ $B$ $beta$ /\u0026lsquo;bi:tə/or/\u0026lsquo;beɪtə/ $3$ $\\gamma$ $\\Gamma$ $gamma$ /\u0026lsquo;gæmə/ $4$ $\\delta$ $\\Delta$ $delta$ /\u0026lsquo;deltə/ $5$ $\\epsilon$ $E$ $epsilon$ /\u0026rsquo;epsɪlɒn/ $6$ $\\zeta$ $Z$ $zeta$ /\u0026lsquo;zi:tə/ $7$ $\\eta$ $H$ $eta$ /\u0026lsquo;i:tə/ $8$ $\\theta$ $\\Theta$ $theta$ /\u0026lsquo;θi:tə/ $9$ $\\iota$ $I$ $iota$ /aɪ\u0026rsquo;əʊtə/ $10$ $\\kappa$ $K$ $kappa$ /\u0026lsquo;kæpə/ $11$ $\\lambda$ $\\lambda$ $lambda$ /\u0026rsquo;læmdə/ $12$ $\\mu$ $M$ $mu$ /mju:/ $13$ $\\nu$ $N$ $nu$ /nju:/ $14$ $\\xi$ $\\Xi$ $xi$ /ksi/or/\u0026lsquo;zaɪ/or/\u0026lsquo;ksaɪ/ $15$ $\\omicron$ $O$ $omicron$ /əu\u0026rsquo;maikrən/or/\u0026lsquo;ɑmɪ,krɑn/ $16$ $\\pi$ $\\Pi$ $pi$ /paɪ/ $17$ $\\rho$ $P$ $rho$ /rəʊ/ $18$ $\\sigma$ $\\Sigma$ $sigma$ /\u0026lsquo;sɪɡmə/ $19$ $\\tau$ $T$ $tau$ /tɔ:/or/taʊ/ $20$ $\\upsilon$ $\\Upsilon$ $upsilon$ /\u0026lsquo;ipsilon/or/\u0026lsquo;ʌpsilɒn/ $21$ $\\phi$ $\\Phi$ $phi$ /faɪ/ $22$ $\\chi$ $X$ $chi$ /kaɪ/ $23$ $\\psi$ $\\Psi$ $psi$ /psaɪ/ $24$ $\\omega$ $\\Omega$ $omega$ /\u0026lsquo;əʊmɪɡə/or/oʊ\u0026rsquo;meɡə/ 12.流程图 1 tag=\u0026gt;type: content:\u0026gt;url 源码如下图所示：\n1 2 3 4 5 6 7 8 9 st=\u0026gt;start: 开始 e=\u0026gt;end: 结束 op=\u0026gt;operation: 操作 sub1=\u0026gt;subroutine: 子程序 cond=\u0026gt;condition: Yes or No? io=\u0026gt;inputoutput: 输入/输出 st-\u0026gt;op-\u0026gt;cond cond(yes)-\u0026gt;io-\u0026gt;e cond(no)-\u0026gt;sub1(right)-\u0026gt;op 具体可参考：markdown 流程图语法-CSDN博客\n以上。\n文章参考了许多文章和资源，部分链接如下，在此鸣谢：\n[1]\u0026lt;\u0026ldquo;https://blog.csdn.net/weixin_45494811/article/details/104307670\"\u003e\n[2]\u0026lt;\u0026ldquo;https://markdown.com.cn/basic-syntax/\"\u003e\n[3]\u0026lt;\u0026ldquo;https://blog.csdn.net/qq_21808961/article/details/81052243\"\u003e\n[4]\u0026lt;\u0026ldquo;https://www.mohu.org/info/symbols/symbols.htm\"\u003e\n[5]\u0026lt;\u0026ldquo;https://markdown.com.cn/cheat-sheet.html\"\u003e\n注意： 这个页面记录我的markdown语法学习的记录，来源于这里。学习流程为在这篇文章中写出和目标文章相同的效果。\nxxxx\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2024-09-15T16:05:56+08:00","image":"https://AXiao-HOLO.github.io/p/markdown%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0/161229155190231137135-20230610115939_hu1720298229994273052.png","permalink":"https://AXiao-HOLO.github.io/p/markdown%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0/","title":"Markdown语法学习"}]